/**
 * @file system_clock.hpp
 * @author Luck Hoang (huyht1205@pm.me)
 * @brief
 * @version 0.1
 * @date 2022-11-20
 *
 * @copyright Copyright (c) 2022
 *
 */

#ifndef __SYSTEM_CLOCK_HPP__
#define __SYSTEM_CLOCK_HPP__

class SYSTEM_CLOCK
{
  public:
    enum class clock_profile_t : char
    {
        MAX_PERFORMANCE = 0,
        LOW_PERFORMANCE,
        SLEEP,
        STOP,
        STANDBY,
        ALL_PROFILE
    };

    typedef void ( *profile_config_fPtr )( void );

    struct system_clock_config_t
    {
        profile_config_fPtr profile_config_functions [ static_cast<int>(
            clock_profile_t::ALL_PROFILE ) ];
    };

    SYSTEM_CLOCK( system_clock_config_t *config );
    ~SYSTEM_CLOCK( void );

    void switch_profile( clock_profile_t profile );

  private:
    /**
     * @brief Use this struct to store function pointers of different
     * systemclock_config() generated by CubeMX
     *
     */
    profile_config_fPtr profile_config_functions [ static_cast<int>(
        clock_profile_t::ALL_PROFILE ) ];
};

#endif // __SYSTEM_CLOCK_HPP__